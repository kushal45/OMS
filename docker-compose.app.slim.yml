services:
  app-base:
    image: oms-app-base:latest
    build:
      context: .
      dockerfile: Dockerfile
    command: echo "Base image built successfully"
    profiles:
      - build-only

  gateway:
    image: oms-app-base:latest
    depends_on:
      auth:
        condition: service_healthy
      order:
        condition: service_healthy
    ports:
      - "3000:3000"
      - "9229:9229"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://gateway:3000/api-gateway/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 3
    environment:
      - NODE_ENV=development
      - PORT=3000
      - SERVICE_NAME=gateway
    command: npm run start:debug --project api-gateway
    networks:
      - oms
    volumes:
      - ./:/app
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.1'
        reservations:
          memory: 128M
          cpus: '0.05'

  auth:
    image: oms-app-base:latest
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "3001:3001"
      - "9230:9229"
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    command: npm run start:debug --project auth
    networks:
      - oms
    volumes:
      - ./:/app
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://auth:3001/auth/health || exit 1"]
      interval: 20s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.1'
        reservations:
          memory: 128M
          cpus: '0.05'

  order:
    image: oms-app-base:latest
    depends_on:
      postgres:
        condition: service_healthy
      kafka:
        condition: service_healthy
    ports:
      - "3002:3002"
      - "9231:9229"
    environment:
        - NODE_ENV=development
        - DATABASE_HOST=postgres
        - DATABASE_PORT=5432
        - DATABASE_USER=postgres
        - DATABASE_PASSWORD=postgres
        - DATABASE_NAME=oms
        - KAFKA_BROKERS=kafka:9092
    command: npm run start:debug --project order
    networks:
      - oms
    volumes:
      - ./:/app
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://order:3002/orders/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.1'
        reservations:
          memory: 128M
          cpus: '0.05'

  inventory:
    image: oms-app-base:latest
    depends_on:
      postgres:
        condition: service_healthy
      kafka:
        condition: service_healthy
    ports:
      - "3003:3003"
      - "5002:5002"
      - "9232:9229"
    environment:
      - KAFKA_BROKERS=kafka:9092
    command: npm run start:debug --project inventory
    networks:
      - oms
    volumes:
      - ./:/app
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.1'
        reservations:
          memory: 128M
          cpus: '0.05'

  product:
    image: oms-app-base:latest
    depends_on:
      postgres:
        condition: service_healthy
      kafka:
        condition: service_healthy
    ports:
      - "3004:3004"
      - "9233:9229"
    environment:
      - NODE_ENV=development
      - DATABASE_HOST=postgres
      - DATABASE_PORT=5432
      - DATABASE_USER=postgres
      - DATABASE_PASSWORD=postgres
      - DATABASE_NAME=oms
      - PORT=3004
      - KAFKA_BROKERS=kafka:9092
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    command: npm run start:debug --project product
    networks:
      - oms
    volumes:
      - ./:/app
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.1'
        reservations:
          memory: 128M
          cpus: '0.05'

  cart:
    image: oms-app-base:latest
    depends_on:
      postgres:
        condition: service_healthy
      kafka:
        condition: service_healthy
    ports:
      - "3005:3005"
      - "9234:9229"
      - "5005:5005"
    environment:
      - NODE_ENV=development
      - DATABASE_HOST=postgres
      - DATABASE_PORT=5432
      - DATABASE_USER=postgres
      - DATABASE_PASSWORD=postgres
      - DATABASE_NAME=oms
      - PORT=3005
      - SERVICE_NAME=cart
      - KAFKA_BROKERS=kafka:9092
      - INVENTORY_RESERVE_TOPIC=reserveInventory
      - INVENTORY_RELEASE_TOPIC=releaseInventory
    command: npm run start:debug --project cart
    networks:
      - oms
    volumes:
      - ./:/app
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://cart:3005/cart/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.1'
        reservations:
          memory: 128M
          cpus: '0.05'

networks:
  oms:
    driver: bridge
